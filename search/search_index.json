{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello World \u7b2c\u4e00\u7bc7\u679c\u7136\u8981 Hello World \u4e00\u4e0b\u3002\u6253\u7b97\u5728\u9019\u908a\u6574\u7406\u5404\u7a2e\u5b78\u5230\u7684\u77e5\u8b58\u3002 \u81ea\u6211\u4ecb\u7d39 \u6709\u7a7a\u88dcwww","title":"Hello World"},{"location":"#hello-world","text":"\u7b2c\u4e00\u7bc7\u679c\u7136\u8981 Hello World \u4e00\u4e0b\u3002\u6253\u7b97\u5728\u9019\u908a\u6574\u7406\u5404\u7a2e\u5b78\u5230\u7684\u77e5\u8b58\u3002","title":"Hello World"},{"location":"#_1","text":"\u6709\u7a7a\u88dcwww","title":"\u81ea\u6211\u4ecb\u7d39"},{"location":"webStructure/","text":"\u7db2\u7ad9\u914d\u7f6e Static web server GitHub Pages Static site generator MKDocs Theme mkdocs-material Extensions KaTeX","title":"\u7db2\u7ad9\u914d\u7f6e"},{"location":"webStructure/#_1","text":"","title":"\u7db2\u7ad9\u914d\u7f6e"},{"location":"webStructure/#static-web-server","text":"GitHub Pages","title":"Static web server"},{"location":"webStructure/#static-site-generator","text":"MKDocs","title":"Static site generator"},{"location":"webStructure/#theme","text":"mkdocs-material","title":"Theme"},{"location":"webStructure/#extensions","text":"KaTeX","title":"Extensions"},{"location":"CTF/pwnable.kr/collision/","text":"collision Question Daddy told me about cool MD5 hash collision today. I wanna do something like that too! ssh col@pwnable.kr -p2222 (pw:guest) Write-up \u9023\u7dda\u4e0a\u53bb\u5f8c\u770b\u5230 vol.c\uff0c\u5167\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <stdio.h> #include <string.h> unsigned long hashcode = 0x21DD09EC ; unsigned long check_password ( const char * p ){ int * ip = ( int * ) p ; int i ; int res = 0 ; for ( i = 0 ; i < 5 ; i ++ ){ res += ip [ i ]; } return res ; } int main ( int argc , char * argv []){ if ( argc < 2 ){ printf ( \"usage : %s [passcode] \\n \" , argv [ 0 ]); return 0 ; } if ( strlen ( argv [ 1 ]) != 20 ){ printf ( \"passcode length should be 20 bytes \\n \" ); return 0 ; } if ( hashcode == check_password ( argv [ 1 ] )){ system ( \"/bin/cat flag\" ); return 0 ; } else printf ( \"wrong passcode. \\n \" ); return 0 ; } \u53ef\u4ee5\u77e5\u9053\u53d6\u5f97 flag \u7684\u689d\u4ef6\u70ba\uff1a argv[1] \u7684\u5927\u5c0f\u70ba20byte \u6839\u64da check_password \uff0c argv[1] \u6bcf4byte\u4f5c\u70ba\u4e00\u500b int \u4e4b\u7e3d\u548c\u9700\u70ba 0x21DD09EC \u4e5f\u5c31\u662f\u5efa\u9020\u4e94\u500b int \u4e14\u7e3d\u548c\u70ba 0x21DD09EC \u5373\u53ef\u3002 \u6211\u5c07\u524d\u56db\u500b int \u8a2d\u70ba 0x01020304 \uff0c\u56e0\u6b64\u6700\u5f8c\u4e00\u500b int \u70ba 0x21DD09EC - 0x01020304 * 4 \u4f7f\u7528 pwntools \u5e6b\u5fd9\u5efa\u69cb\uff0c\u6307\u4ee4\u5982\u4e0b\uff1a 1 ./col ` python2 -c \"from pwn import *; print(p32(0x01020304) * 4 + p32(0x21DD09EC - 0x01020304 * 4))\" ` \u57f7\u884c\u5f8c\u5f97\u5230flag flag daddy! I just managed to create a hash collision :)","title":"collision"},{"location":"CTF/pwnable.kr/collision/#collision","text":"","title":"collision"},{"location":"CTF/pwnable.kr/collision/#question","text":"Daddy told me about cool MD5 hash collision today. I wanna do something like that too! ssh col@pwnable.kr -p2222 (pw:guest)","title":"Question"},{"location":"CTF/pwnable.kr/collision/#write-up","text":"\u9023\u7dda\u4e0a\u53bb\u5f8c\u770b\u5230 vol.c\uff0c\u5167\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <stdio.h> #include <string.h> unsigned long hashcode = 0x21DD09EC ; unsigned long check_password ( const char * p ){ int * ip = ( int * ) p ; int i ; int res = 0 ; for ( i = 0 ; i < 5 ; i ++ ){ res += ip [ i ]; } return res ; } int main ( int argc , char * argv []){ if ( argc < 2 ){ printf ( \"usage : %s [passcode] \\n \" , argv [ 0 ]); return 0 ; } if ( strlen ( argv [ 1 ]) != 20 ){ printf ( \"passcode length should be 20 bytes \\n \" ); return 0 ; } if ( hashcode == check_password ( argv [ 1 ] )){ system ( \"/bin/cat flag\" ); return 0 ; } else printf ( \"wrong passcode. \\n \" ); return 0 ; } \u53ef\u4ee5\u77e5\u9053\u53d6\u5f97 flag \u7684\u689d\u4ef6\u70ba\uff1a argv[1] \u7684\u5927\u5c0f\u70ba20byte \u6839\u64da check_password \uff0c argv[1] \u6bcf4byte\u4f5c\u70ba\u4e00\u500b int \u4e4b\u7e3d\u548c\u9700\u70ba 0x21DD09EC \u4e5f\u5c31\u662f\u5efa\u9020\u4e94\u500b int \u4e14\u7e3d\u548c\u70ba 0x21DD09EC \u5373\u53ef\u3002 \u6211\u5c07\u524d\u56db\u500b int \u8a2d\u70ba 0x01020304 \uff0c\u56e0\u6b64\u6700\u5f8c\u4e00\u500b int \u70ba 0x21DD09EC - 0x01020304 * 4 \u4f7f\u7528 pwntools \u5e6b\u5fd9\u5efa\u69cb\uff0c\u6307\u4ee4\u5982\u4e0b\uff1a 1 ./col ` python2 -c \"from pwn import *; print(p32(0x01020304) * 4 + p32(0x21DD09EC - 0x01020304 * 4))\" ` \u57f7\u884c\u5f8c\u5f97\u5230flag","title":"Write-up"},{"location":"CTF/pwnable.kr/collision/#flag","text":"daddy! I just managed to create a hash collision :)","title":"flag"}]}